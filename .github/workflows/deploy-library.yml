name: Deploy library

on:
  push:
    tags: [ v* ]
    branches: [ main ]

jobs:
  vars:
    runs-on: ubuntu-latest
    steps:
    - id: tag_version
      run: |
        REF=$(echo $GITHUB_REF | cut -d / -f 3)
        [[ "$GITHUB_REF" =~ ^refs/tags.*$ ]] && VERSION="$REF" || VERSION="${REF}-${GITHUB_SHA::7}"
        echo ::set-output name=version::$(echo "$VERSION")
    - id: send-message
      uses: archive/github-actions-slack@master
      with:
        slack-function: send-message
        slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
        slack-channel: deployments
        slack-text: Deployment of ${{ github.repository }} has begun.
      env:
        INPUT_SLACK-OPTIONAL-blocks: |
          [
            { type: 'section', text: { type: 'mrkdwn', text: 'A deployment for *${{ github.repository }}* has begun.' } },
            { type: 'divider' },
            { type: 'section', fields: [
                { type: 'mrkdwn', text: '*Version:*\n${{ steps.tag_version.outputs.version }}' },
                { type: 'mrkdwn', text: '*Author:*\n${{ github.triggering_actor }}' },
            ]},
            { type: 'divider' },
            {
              type: 'section',
              text: { type: 'mrkdwn', text: '${{ github.workflow}} #${{ github.run_id }}' },
              accessory: { type: 'button', text: { type: 'plain_text', text: 'View Deployment' }, url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id}}' },
            },
          ]
    outputs:
      version: ${{ steps.tag_version.outputs.version }}
      slack-channel: ${{ fromJson(steps.send-message.outputs.slack-result).response.channel }}
      slack-thread: ${{ fromJson(steps.send-message.outputs.slack-result).response.message.ts }}

  post-deploy-failure:
    if: failure()
    needs: [vars, deploy]
    runs-on: ubuntu-latest
    steps:
    - name: Notify failure
      uses: archive/github-actions-slack@master
      with:
        slack-function: send-message
        slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
        slack-channel: ${{ needs.vars.outputs.slack-channel }}
        slack-text: Deployment failed!
        slack-optional-thread_ts: ${{ needs.vars.outputs.slack-thread }}
        slack-optional-reply_broadcast: true

  post-deploy-success:
    if: success()
    needs: [vars, deploy]
    runs-on: ubuntu-latest
    steps:
    - name: Notify success
      uses: archive/github-actions-slack@master
      with:
        slack-function: send-message
        slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
        slack-channel: ${{ needs.vars.outputs.slack-channel }}
        slack-text: Deployment complete.
        slack-optional-thread_ts: ${{ needs.vars.outputs.slack-thread }}

  # Build
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 16.x
    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
    - name: Install dependencies
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - name: Build Widget
      run: yarn build
    - name: Archive Widget
      uses: actions/upload-artifact@v2
      with:
        name: compiled-assets
        path: |
          dist

  deploy:
    runs-on: ubuntu-latest
    needs: [vars, build]
    steps:
    - name: Download compiled assets
      uses: actions/download-artifact@v2
      with:
        name: compiled-assets
    - uses: jakejarvis/s3-sync-action@v0.5.1
      with:
        args: --cache-control max-age=31536000,public
      env:
        AWS_S3_BUCKET: cdn.parameter1.com
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        DEST_DIR: 'deferred-script-loader/${{ needs.vars.outputs.version }}'
